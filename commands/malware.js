const Discord = require('discord.js')
const { Client, Intents } = require('discord.js');
let psl = require('psl');
const fetch = require("node-fetch");

const client = new Client({ 
    intents: [
        Intents.FLAGS.GUILDS,
        Intents.FLAGS.GUILD_MEMBERS,
        Intents.FLAGS.GUILD_INVITES,
        Intents.FLAGS.GUILD_PRESENCES,
        Intents.FLAGS.GUILD_MESSAGES,
        Intents.FLAGS.DIRECT_MESSAGES,
    ]
});

const list = require("./list");
const allowlist = require("./allowlist");
const config = require("../config");

const youtubeKey = config.youtubeKey

module.exports ={
    malware: async function(message,client,guildConf){  
        const messa = message.content.toLowerCase(); 
        if(messa.includes("https://")||messa.includes("http://")){
            let banned = list.arr;
            let allow = allowlist.arr;
    
            // Some sort of worm has been spread which uses messages like this to spread.
            const malregex = /(creator|publisher).+(enter|participate).+(beta|closed beta).+(bonus|reward).+(download|install).+(link|file)/i
            const malregex2 = /(steam|csgo).+(giveaway|giving away|leaving).+(nitro|closed beta|trades)/i
            const malregex3 = /(join).+(traders|trader).+(earn).+($|Â£|)/i
            const strx = messa;
            var url = messa.match(/\bhttps?:\/\/\S+/gi);
            if(!url){return}
            else{
                for (var i = 0; i < url.length; i++) { //checks all links
                    let URLlower=url[i].toLowerCase();
                    //console.log(url[i])
                    if(url[i].includes("https://youtu.be/")||url[i].includes("https://www.youtube.com/watch?v=")||url[i].includes("https://m.youtube.com/watch?v=")){ 
                        if (url[i].includes("https://youtu.be/")){
                            const youtubeVideoID = url[i].split("https://youtu.be/")[1];
                            //console.log(youtubeVideoID);
                            //getVideoinfo(youtubeVideoID,message,client);
                            
                        }
                        if(url[i].includes("https://www.youtube.com/watch?v=")){
                            const youtubeVideo = url[i].split("https://www.youtube.com/watch?v=")[1];
                            if(youtubeVideo.includes("channel=")){
                                const youtubeVideoID = youtubeVideo.split("&")[0]
                                //console.log(youtubeVideoID);
                                //getVideoinfo(youtubeVideoID,message,client);
                                
                            }
                            else{
                                const youtubeVideoID = youtubeVideo;
                                //console.log(youtubeVideoID);
                                //getVideoinfo(youtubeVideoID,message,client);
                                
                            }
                        }
                        if(url[i].includes("https://m.youtube.com/watch?v=")){
                            const youtubeVideo = url[i].split("https://m.youtube.com/watch?v=")[1];
                            if(youtubeVideo.includes("channel=")){
                                const youtubeVideoID = youtubeVideo.split("&")[0]
                                //console.log(youtubeVideoID);
                                //getVideoinfo(youtubeVideoID,message,client);
                                
                            }
                            else{
                                const youtubeVideoID = youtubeVideo;
                                //console.log(youtubeVideoID);
                                //getVideoinfo(youtubeVideoID,message,client);
                                
                            }
                        }
                    }
                    else{
                        for (var l = 0; l < allow.length; l++) { //real links
                            if (URLlower.includes(allow[l])) {
                                return;
                            }  
                        }
                        for (var x = 0; x < banned.length; x++) { //fake link
                            if (URLlower.includes(banned[x])) {
                                trigger(message,client);
                                return;
                            }
                        }
                    }
                }
            }
            let mal;
            if((mal = malregex2.exec(strx)) !== null){ //if missed fake link
                trigger(message,client);
                return;
            }
            if((mal = malregex3.exec(strx)) !== null){ //if missed fake link
                trigger(message,client);
                return;
            }
            else{
                for (var i = 0; i < url.length; i++) {  
                    var url2 = url[i]
                    if(similarity('discord.com',psl.get(extractHostname(url2)))>0.85){
                        //console.log(url2)
                        channel = client.channels.cache.find(channel => channel.id === "716762885522456677");
                        channel.send("New link `"+url2+"` ,"+ similarity('discord.com',psl.get(extractHostname(url2))));
                        trigger(message,client);
                        return;
                    }
                    if(similarity('discord.gift',psl.get(extractHostname(url2)))>0.85){
                        //console.log(url2)
                        channel = client.channels.cache.find(channel => channel.id === "716762885522456677");
                        channel.send("New link `"+url2+"` ,"+similarity('discord.gift',psl.get(extractHostname(url2))));
                        trigger(message,client);
                        return;
                    }
                    if(similarity('discord-app.com',psl.get(extractHostname(url2)))>0.85){
                        //console.log(url2)
                        channel = client.channels.cache.find(channel => channel.id === "716762885522456677");
                        channel.send("New link `"+url2+"` ,"+similarity('discord-app.com',psl.get(extractHostname(url2))));
                        trigger(message,client);
                        return;
                    }
                    if(similarity('discord.gg',psl.get(extractHostname(url2)))>0.85){
                        //console.log(url2)
                        channel = client.channels.cache.find(channel => channel.id === "716762885522456677");
                        channel.send("New link `"+url2+"` ,"+similarity('discord.gg',psl.get(extractHostname(url2))));
                        trigger(message,client);
                        return;
                    }
                    //console.log(similarity('discord.com',psl.get(extractHostname(url))));
                    //console.log(similarity('discord.gift',psl.get(extractHostname(url))));
                }
            }
        }
    }
}

const trigger  = async (message,client) => {
    const guildConf = client.settings.get(message.guild.id);
    message.channel.send("<@"+message.author.id+">, account might be compromised.");
    message.author.send("We noticed you've been compromised by self-spreading malware (a worm) which takes over your account to send download links to this worm to others.\nYou must run a Windows Defender full scan and change your password.")
    .catch(console.error);
    message.delete().catch(error => {console.log(error)});
    //console.log(guildConf.logchannel)
    //logging
    let log = guildConf.logchannel
    if(guildConf.logchannel===null||!guildConf.logchannel||guildConf.logchannel===undefined){
        console.log("no log")
        if (guildConf.tips===true){
            if (Math.floor(Math.random() * (10 - 1 + 1)) + 1 <= 3){
                message.send("You can make me log those message in log channel with `&setconf logchannel (channel)` \n you can turn off this with `&setconf tips false`")
            }
        }
        return;
    }
    if(log.includes("#")){
        const channelid = guildConf.logchannel.split("#")[1].slice(0,-1)    
        const channel = client.channels.cache.find(channel => channel.id === channelid);
        let time = message.createdTimestamp
        var date = new Date(time * 1000);
        var hours = date.getHours();
        var minutes = "0" + date.getMinutes();
        var seconds = "0" + date.getSeconds();
        var formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);
    
        const embed = new Discord.MessageEmbed()
        .setTitle('A user may be compromised')
        .setAuthor('Anti malware', 'https://cdn.discordapp.com/attachments/489898965282848778/879029494168571904/anti-malware-icon-28.png')
        .setColor(0xFF0000)
        .setDescription(message.content)
        .addField('person id', message.author.id)
        .addField("person name ", message.author.tag)
        .setFooter("today at "+formattedTime)
        channel.send({ embeds: [embed] }).catch(error => {console.log(error)});
    }
}


function similarity(s1, s2) {
    var longer = s1;
    var shorter = s2;
    if (s1.length < s2.length) {
      longer = s2;
      shorter = s1;
    }
    var longerLength = longer.length;
    if (longerLength == 0) {
      return 1.0;
    }
    return (longerLength - editDistance(longer, shorter)) / parseFloat(longerLength);
}

function editDistance(s1, s2) {
    s1 = s1.toLowerCase();
    s2 = s2.toLowerCase();

    var costs = new Array();
    for (var i = 0; i <= s1.length; i++) {
      var lastValue = i;
      for (var j = 0; j <= s2.length; j++) {
        if (i == 0)
          costs[j] = j;
        else {
          if (j > 0) {
            var newValue = costs[j - 1];
            if (s1.charAt(i - 1) != s2.charAt(j - 1))
              newValue = Math.min(Math.min(newValue, lastValue),
                costs[j]) + 1;
            costs[j - 1] = lastValue;
            lastValue = newValue;
          }
        }
      }
      if (i > 0)
        costs[s2.length] = lastValue;
    }
    return costs[s2.length];
}
function extractHostname(url) {
    var hostname;
    //find & remove protocol (http, ftp, etc.) and get hostname

    if (url.indexOf("//") > -1) {
        hostname = url.split('/')[2];
    }
    else {
        hostname = url.split('/')[0];
    }

    //find & remove port number
    hostname = hostname.split(':')[0];
    //find & remove "?"
    hostname = hostname.split('?')[0];

    return hostname;
}

function extractRootDomain(url) {
    var domain = extractHostname(url),
        splitArr = domain.split('.'),
        arrLen = splitArr.length;

    //extracting the root domain here
    //if there is a subdomain 
    if (arrLen > 2) {
        domain = splitArr[arrLen - 2] + '.' + splitArr[arrLen - 1];
        //check to see if it's using a Country Code Top Level Domain (ccTLD) (i.e. ".me.uk")
        if (splitArr[arrLen - 2].length == 2 && splitArr[arrLen - 1].length == 2) {
            //this is using a ccTLD
            domain = splitArr[arrLen - 3] + '.' + domain;
        }
    }
    return domain;
}

const getVideoinfo = async (youtubeVideoID,message,client) => {
    fetch("https://www.googleapis.com/youtube/v3/videos?id="+youtubeVideoID+"&part=snippet&key="+youtubeKey)
    .then(response => {
        //console.log(response.json)
        return response.json();
    })
    .then(data=>{
        console.log(data["items"][0]);
        //console.log(data["items"][0]);
        if(data["items"][0]){
            var title = data["items"][0].snippet.title;//title
            let regex = /(free|nitro|discord).+(nitro|GENERATOR)/i
            if((mal = regex.exec(title)) !== null){ //if missed fake link
                trigger(message,client);
                return;
            }
        }
        //console.log(title)
    })
}
