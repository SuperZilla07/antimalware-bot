const Discord = require('discord.js')
const { Client, Intents } = require('discord.js');
const Enmap = require('enmap');
const { Permissions } = require('discord.js')
const client = new Client({ 
    intents: [
        Intents.FLAGS.GUILDS,
        Intents.FLAGS.GUILD_MEMBERS,
        Intents.FLAGS.GUILD_INVITES,
        Intents.FLAGS.GUILD_PRESENCES,
        Intents.FLAGS.GUILD_MESSAGES,
        Intents.FLAGS.DIRECT_MESSAGES,
    ],
    partials:[
        `CHANNEL`,
        `MESSAGE`
    ],
    autoReconnect: true,
});

const config = require("./config");
const malware = require("./commands/malware")

client.settings = new Enmap({
    name: "settings",
    fetchAll: false,
    autoFetch: true,
    cloneLevel: 'deep',
    autoEnsure:{
        prefix: "&",	
        logchannel: "null",
        tips: "true"
    }
});


client.on("ready", async () =>{
    console.log(`Logged in as ${client.user.tag}!`);
    let TotalMember = 0
    let TotalGuild=0
    client.guilds.cache.forEach(guild => { // Looping through all the guilds your bot is in.
        TotalGuild=TotalGuild+1
        TotalMember=TotalMember+guild.memberCount;
    });
    console.log(`In ${TotalGuild} server`)
    console.log(`With a total of ${TotalMember} member`)
    client.user.setActivity(`for malware`, { type: "WATCHING"});

});

client.on('messageCreate', async message => {
    if(message.author.bot) return;
    if(message.guild === null) return;
    
    const guildConf = client.settings.get(message.guild.id);
    malware.malware(message,client,guildConf)

    //commands
    if(message.content.indexOf(guildConf.prefix) !== 0) return; 
    const args = message.content.split(/\s+/g);
    const command = args.shift().slice(guildConf.prefix.length).toLowerCase();  

    if(command === "setconf") {
        // Command is admin only, let's grab the admin value: 

        if(!message.member.permissions.has(Permissions.FLAGS.MANAGE_GUILD)) {
            return message.reply("You're not an admin, sorry!");
        }

        const [prop, ...value] = args;
        if(!client.settings.has(message.guild.id, prop)) {
            return message.reply("This key is not in the configuration.");
        }

        if(prop === "logchannel") {
            if(!value[0]){
                return message.reply("No channel");
            }
            if(!value[0].includes("#")){
                if(!value[0]==="off"||!value[0]==="null")
                return message.reply("No channel");
            }
        }

        // Now we can finally change the value. Here we only have strings for values 
        // so we won't bother trying to make sure it's the right type and such. 
        client.settings.set(message.guild.id, value.join(" "), prop);

        // We can confirm everything's done to the client.
        message.channel.send(`Guild configuration item ${prop} has been changed to:\n\`${value.join(" ")}\``);
    }

      if(command === "showconf") {
        let configProps = Object.keys(guildConf).map(prop => {
          return `${prop}  :  ${guildConf[prop]}\n`;
        });
        message.channel.send(`The following are the server's current configuration:
        \`\`\`${configProps}\`\`\``);
    }

});

client.login(config.BotToken);